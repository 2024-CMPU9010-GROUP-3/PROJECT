name: magpie

services:
  postgis-service:
    image: postgis/postgis:17-3.5-alpine
    container_name: postgis
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=magpie
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "magpie", "-u", "postgres"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    ports:
      - "5432:5432"
    networks:
      - app-network

  private-service:
    image: ghcr.io/2024-cmpu9010-group-3/backend-private:0.10.0@sha256:e0f3571d8ecea130414b06f8c91501abca9e8e2ab46c827f9d4b23ef2700d1a4
    container_name: private-backend
    depends_on:
      postgis-service:
        condition: service_healthy
    ports:
      - "8081:8080"
    networks:
      - app-network
    environment:
      - MAGPIE_DB_URL=postgres://postgres:${POSTGRES_PASSWORD}@postgis:5432/magpie?sslmode=disable
      - MAGPIE_JWT_SECRET=${MAGPIE_JWT_SECRET}
      - MAGPIE_JWT_EXPIRY=24h
      - MAGPIE_CORS_ALLOWED_ORIGINS=http://localhost:3000 https://localhost:3000 http://example.com
      - MAGPIE_CORS_ALLOWED_METHODS=GET POST PUT DELETE

  public-service:
    image: ghcr.io/2024-cmpu9010-group-3/backend-public:0.10.0@sha256:198cbd95f823d3f7ded0646c4710e3a8267e1008c1fd43920cfe2a1dd31861c3
    container_name: public-backend
    depends_on:
      postgis-service:
        condition: service_healthy
    ports:
      - "8082:8080"
    networks:
      - app-network
    environment:
      - MAGPIE_DB_URL=postgres://postgres:${POSTGRES_PASSWORD}@postgis:5432/magpie?sslmode=disable
      - MAGPIE_JWT_SECRET=${MAGPIE_JWT_SECRET}
      - MAGPIE_JWT_EXPIRY=24h
      - MAGPIE_CORS_ALLOWED_ORIGINS=http://localhost:3000 https://localhost:3000 http://example.com
      - MAGPIE_CORS_ALLOWED_METHODS=GET POST PUT DELETE

  frontend-service:
    image: ghcr.io/2024-cmpu9010-group-3/frontend:0.7.0@sha256:383c11ad5f5305b5b25b8cdee153b2ff554f8cb7666dd2457085a4559c1acddd
    container_name: frontend
    depends_on:
      - private-service
      - public-service
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN=${MAPBOX_ACCESS_TOKEN}
      - NEXT_PUBLIC_BACKEND_URL=http://public-service:8080
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
