name: magpie

services:
  postgis-service:
    image: postgis/postgis:17-3.5-alpine
    container_name: postgis
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=magpie
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d magpie -U postgres"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    ports:
      - "5432:5432"
    networks:
      - app-network

  private-service:
    image: ghcr.io/2024-cmpu9010-group-3/backend-private:0.12.0@sha256:6ca590174184da29ac72d7d5650b47b7b3a7c69b341ef6020fae0340229d438b
    container_name: private-backend
    depends_on:
      postgis-service:
        condition: service_healthy
    ports:
      - "8081:8080"
    networks:
      - app-network
    environment:
      - MAGPIE_DB_URL=postgres://postgres:${POSTGRES_PASSWORD}@postgis:5432/magpie?sslmode=disable
      - MAGPIE_JWT_SECRET=${MAGPIE_JWT_SECRET}
      - MAGPIE_JWT_EXPIRY=24h
      - MAGPIE_CORS_ALLOWED_ORIGINS=http://localhost:3000 https://localhost:3000 http://example.com
      - MAGPIE_CORS_ALLOWED_METHODS=GET POST PUT DELETE

  public-service:
    image: ghcr.io/2024-cmpu9010-group-3/backend-public:0.12.0@sha256:18d4faaaa4b2783b2a1869228a1a52dba4fb30abf079f89bb9d75a2b03f5c7b5
    container_name: public-backend
    depends_on:
      postgis-service:
        condition: service_healthy
    ports:
      - "8082:8080"
    networks:
      - app-network
    environment:
      - MAGPIE_DB_URL=postgres://postgres:${POSTGRES_PASSWORD}@postgis:5432/magpie?sslmode=disable
      - MAGPIE_JWT_SECRET=${MAGPIE_JWT_SECRET}
      - MAGPIE_JWT_EXPIRY=24h
      - MAGPIE_CORS_ALLOWED_ORIGINS=http://localhost:3000 https://localhost:3000 http://example.com
      - MAGPIE_CORS_ALLOWED_METHODS=GET POST PUT DELETE

  frontend-service:
    image: ghcr.io/2024-cmpu9010-group-3/frontend:0.9.0@sha256:7840177b3e46212185ed3d9bcdc15762d4e046cb5a32365f2b89dd95509d6f23
    container_name: frontend
    depends_on:
      - private-service
      - public-service
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN=${MAPBOX_ACCESS_TOKEN}
      - NEXT_PUBLIC_BACKEND_URL=http://public-service:8080
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
